# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name latex-compiler.handjobs.co.in;
    
    # For Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }
    
    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server - Cloudflare compatible
server {
    listen 443 ssl http2;
    server_name latex-compiler.handjobs.co.in;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/latex-compiler.handjobs.co.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/latex-compiler.handjobs.co.in/privkey.pem;
    
    # Modern SSL configuration (Cloudflare compatible)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # Security headers (moderate - compatible with Cloudflare)
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Main application proxy
    location / {
        proxy_pass http://latex-compiler:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Cloudflare headers
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Visitor $http_cf_visitor;
        proxy_set_header CF-Ray $http_cf_ray;
        
        # Timeouts and limits
        proxy_read_timeout 120s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        client_max_body_size 50M;
        client_body_timeout 60s;
        
        # HTTP version and connection handling
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Health check endpoint for monitoring
    location /nginx-health {
        access_log off;
        return 200 "nginx is healthy\n";
        add_header Content-Type text/plain;
    }
}
